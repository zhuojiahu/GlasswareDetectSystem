#ifndef ROTEMPTYBOTTLE_H
#define ROTEMPTYBOTTLE_H

//#include <QtCore/qglobal.h>
//
//#ifdef ROTEMPTYBOTTLE_LIB
//# define ROTEMPTYBOTTLE_EXPORT Q_DECL_EXPORT
//#else
//# define ROTEMPTYBOTTLE_EXPORT Q_DECL_IMPORT
//#endif
#define DLL_EXT _declspec(dllexport) 

#include "alg_struct.h"
using namespace Alg;

#include <vector>
#include <list>
using namespace std;

const int RETURN_OK           = 0; //返回正常
const int RETURN_CHECK_INIT   = 1; //初始化错误
const int RETURN_MODEL_MANAGE = 2; //模板管理错误
const int RETURN_PARA_MANAGE  = 3; //检测参数设置错误
const int RETURN_CHECK_ERROR  = 4; //检测算法出错
const int RETURN_CHECK_FREE   = 5; //释放错误

class DLL_EXT RotEmptyBottle
{
public:
	RotEmptyBottle();
	~RotEmptyBottle();

private:

};
class CBottleCheck;
typedef struct 
{
	int nID;   //区域ID
	CBottleCheck  *pChecker;   //检测类对象
}s_CheckerList;
///*****以下为算法动态库相关接口定义*****//

// 检测抽象类
class CAlgorithm  
{
public:
	CAlgorithm()
	{
	}
	virtual ~CAlgorithm()
	{
	}
	virtual Alg::s_Status init(Alg::s_AlgInitParam sAInitParam)=0;
	virtual Alg::s_Status Free()=0;
	virtual Alg::s_Status Check(Alg::s_AlgCInP sAlgCInP,Alg::s_AlgCheckResult **sAlgCheckResult)=0;
	virtual Alg::s_Status CopySizePara(Alg::s_SizePara4Copy &sSizePara)=0;
};

// 模板抽象类
class CModel 
{
public:
	CModel()
	{
	}
	virtual ~CModel()
	{
}
	virtual Alg::s_Status SetModelDlg(Alg::s_AlgModelPara sAlgModelPara,CBottleCheck *pChecker,
		list< s_CheckerList> & sCheckerList)=0;

};


///*****以下为算法导出函数定义*****//

/************************************************************************
	功能：初始化检测动态库，必须在整个动态库开始前或是改变任务后调用区域前
    int nWidth, int nHeight该任务图像宽高
	这是对于所有类需要统一初始化的参数 
/************************************************************************/
s_Status DLL_EXT init_bottle_module(int nWidth, int nHeight, int nChannel);

s_Status DLL_EXT free_bottle_module();

//检测接口类
class DLL_EXT CBottleCheck : public CAlgorithm
{
public:
	CBottleCheck();
	virtual ~CBottleCheck();
	
   /************************************************************************
	    功能：初始化检测类参数
 	/************************************************************************/
	s_Status init(Alg::s_AlgInitParam sAlgInitParam);
	/************************************************************************
	    功能：释放检测类分配的资源
 	/************************************************************************/
	s_Status Free();	
	/************************************************************************
	    功能：质量检测
	    s_AlgCInP sAlgCInP  检测输入参数
        s_AlgCheckResult **sAlgCheckResult   检测输出参数
 	/************************************************************************/
	s_Status Check(s_AlgCInP sAlgCInP,s_AlgCheckResult **sAlgCheckResult);	
	/************************************************************************
	    功能：用于尺寸检测数据综合时复制参数到当前相机模板文件
 	/************************************************************************/	
	Alg::s_Status CopySizePara(Alg::s_SizePara4Copy &sSizePara);

public:
	CAlgorithm *m_pAlg;
};

//模板接口类 
class DLL_EXT CBottleModel : public CModel
{
public:
	// 检测类指针，用于更新对话框上设置的数据
	CBottleCheck *m_pChecker;

	CBottleModel();
	virtual ~CBottleModel();
	
	/************************************************************************
	    功能：设置检测模板参数
        s_AlgModelPara sAlgModelPara 模板输入数据，暂时只包含图像信息
	    CBottleCheck *pChecker  当前检测指针
        CList< s_SetBottleChecker, s_SetBottleChecker &> & sListSetChecker 所有检测链表，用于-
		        更新所有区域使用
	/************************************************************************/	
	Alg::s_Status SetModelDlg(Alg::s_AlgModelPara sAlgModelPara,CBottleCheck *pChecker,
		list< s_CheckerList> &sCheckerList);

protected:
	CModel *m_pModel;

};
#endif // ROTEMPTYBOTTLE_H
